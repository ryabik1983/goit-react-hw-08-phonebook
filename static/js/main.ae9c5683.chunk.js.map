{"version":3,"sources":["store/store.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","index.js","store/auth/auth-operations.js","store/auth/auth-selectors.js","store/auth/auth-slice.js","store/contacts/reducer.js","store/contacts/action.js","store/contacts/contactsSelectors.js","App.module.scss","store/contacts/services.js","store/contacts/operations.js"],"names":["middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","contacts","contactsReducer","devTools","process","persistor","persistStore","PrivateRoute","children","useSelector","authSelectors","getIsLoggedIn","to","PublicRoute","restricted","Navigation","lazy","Contacts","HomePage","RegForm","LoginForm","App","dispatch","useDispatch","refreshing","getRefreshingStatus","useEffect","authOperations","fetchCurrentUser","className","styles","fallback","Box","sx","width","LinearProgress","path","element","ReactDOM","render","StrictMode","loading","document","getElementById","axios","defaults","baseURL","token","headers","common","Authorization","registration","createAsyncThunk","credentials","a","post","data","console","log","response","statusText","logIn","logOut","_","thunkAPI","state","getState","persistedToken","rejectWithValue","get","operations","isLoggedIn","getUsername","user","name","getErrorLog","errorLog","getErrorReg","errorReg","authSlice","createSlice","initialState","email","extraReducers","fulfilled","action","payload","pending","rejected","entities","createReducer","fetchContacts","addContact","deleteContact","filter","id","isLoading","error","actions","filterContacts","combineReducers","createAction","getContacts","getToken","module","exports","config","addContacts","contact","deleteContacts","contactId","delete","fetchService","number"],"mappings":"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","file":"static/js/main.ae9c5683.chunk.js","sourcesContent":["import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from './contacts/reducer';\r\nimport { authReducer } from './auth';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contacts: contactsReducer,\r\n  },\r\n  devTools: process.env.NODE_ENV === 'development',\r\n  middleware,\r\n});\r\n\r\nexport const persistor = persistStore(store);","import { useSelector } from 'react-redux';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { authSelectors } from '../store/auth';\r\n\r\nexport default function PrivateRoute({ children }) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return isLoggedIn ? children : <Navigate to=\"/login\" />;\r\n}","import { useSelector } from 'react-redux';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { authSelectors } from '../store/auth';\r\n\r\nexport default function PublicRoute({ children, restricted = false }) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  const shouldNavigate = isLoggedIn && restricted;\r\n  return shouldNavigate ? <Navigate to=\"/\" /> : children;\r\n}","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect, Suspense, lazy } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\nimport { Route, Routes } from 'react-router-dom';\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport PublicRoute from './components/PublicRoute';\r\nimport { authOperations, authSelectors } from './store/auth';\r\nimport styles from './App.module.scss';\r\n\r\nconst Navigation = lazy(() => import('./components/Navigation/Navigation'));\r\nconst Contacts = lazy(() => import('./components/Contacts/Contacts'));\r\nconst HomePage = lazy(() => import('./components/HomePage/HomePage'));\r\nconst RegForm = lazy(() => import('./components/RegForm/RegForm'));\r\nconst LoginForm = lazy(() => import('./components/LoginForm/LoginForm'));\r\n\r\nexport default function App() {\r\n  const dispatch = useDispatch();\r\n  const refreshing = useSelector(authSelectors.getRefreshingStatus);\r\n  useEffect(() => {\r\n    dispatch(authOperations.fetchCurrentUser());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    !refreshing && (\r\n      <section className={styles['main-container']}>\r\n        <Suspense\r\n          fallback={\r\n            <Box sx={{ width: '100%' }}>\r\n              <LinearProgress />\r\n            </Box>\r\n          }\r\n        >\r\n          <Navigation />\r\n          <Routes>\r\n            <Route\r\n              path=\"/\"\r\n              element={\r\n                <PublicRoute>\r\n                  <HomePage />\r\n                </PublicRoute>\r\n              }\r\n            ></Route>\r\n            <Route\r\n              path=\"/registration\"\r\n              element={\r\n                <PublicRoute restricted>\r\n                  <RegForm />\r\n                </PublicRoute>\r\n              }\r\n            ></Route>\r\n            <Route\r\n              path=\"/login\"\r\n              element={\r\n                <PublicRoute restricted>\r\n                  <LoginForm />\r\n                </PublicRoute>\r\n              }\r\n            ></Route>\r\n            <Route\r\n              path=\"/contacts\"\r\n              element={\r\n                <PrivateRoute>\r\n                  <Contacts />\r\n                </PrivateRoute>\r\n              }\r\n            ></Route>\r\n          </Routes>\r\n        </Suspense>\r\n      </section>\r\n    )\r\n  );\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { store, persistor } from './store/store';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);","import axios from 'axios';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst registration = createAsyncThunk(\r\n  'auth/registration',\r\n  async credentials => {\r\n    try {\r\n      const { data } = await axios.post('/users/signup', credentials);\r\n      token.set(data.token);\r\n      return data;\r\n    } catch (error) {\r\n      console.log(error.response.statusText);\r\n    }\r\n  },\r\n);\r\n\r\nconst logIn = createAsyncThunk('auth/login', async credentials => {\r\n  try {\r\n    const { data } = await axios.post('/users/login', credentials);\r\n    token.set(data.token);\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error.response.statusText);\r\n  }\r\n});\r\n\r\nconst logOut = createAsyncThunk('auth/logout', async () => {\r\n  try {\r\n    await axios.post('/users/logout');\r\n    token.unset();\r\n  } catch (error) {\r\n    console.log(error.response.statusText);\r\n  }\r\n});\r\n\r\nconst fetchCurrentUser = createAsyncThunk(\r\n  'auth/refresh',\r\n  async (_, thunkAPI) => {\r\n    const state = thunkAPI.getState();\r\n    const persistedToken = state.auth.token;\r\n\r\n    if (persistedToken === null) {\r\n      return thunkAPI.rejectWithValue();\r\n    }\r\n\r\n    token.set(persistedToken);\r\n    try {\r\n      const { data } = await axios.get('/users/current');\r\n      return data;\r\n    } catch (error) {\r\n      console.log(error.response.statusText);\r\n    }\r\n  },\r\n);\r\n\r\nconst operations = {\r\n  registration,\r\n  logOut,\r\n  logIn,\r\n  fetchCurrentUser,\r\n};\r\nexport default operations;","const getIsLoggedIn = state => state.auth.isLoggedIn;\r\nconst getErrorLog = state => state.auth.errorLog;\r\nconst getErrorReg = state => state.auth.errorReg;\r\n\r\nconst getUsername = state => state.auth.user.name;\r\n\r\nconst getRefreshingStatus = state => state.auth.refreshing;\r\n\r\nconst authSelectors = {\r\n  getIsLoggedIn,\r\n  getUsername,\r\n  getRefreshingStatus,\r\n  getErrorLog,\r\n  getErrorReg,\r\n};\r\nexport default authSelectors;","import { createSlice } from '@reduxjs/toolkit';\r\nimport authOperations from './auth-operations';\r\n\r\nconst initialState = {\r\n  user: { name: null, email: null },\r\n  token: null,\r\n  isLoggedIn: false,\r\n  refreshing: false,\r\n  errorLog: false,\r\n  errorReg: false,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  extraReducers: {\r\n    [authOperations.registration.fulfilled](state, action) {\r\n      if (action.payload) {\r\n        state.user = action.payload.user;\r\n        state.token = action.payload.token;\r\n        state.isLoggedIn = true;\r\n        state.errorReg = false;\r\n      } else {\r\n        state.errorReg = true;\r\n      }\r\n    },\r\n    [authOperations.logIn.fulfilled](state, action) {\r\n      if (action.payload) {\r\n        state.user = action.payload.user;\r\n        state.token = action.payload.token;\r\n        state.isLoggedIn = true;\r\n        state.errorLog = false;\r\n      } else {\r\n        state.errorLog = true;\r\n      }\r\n    },\r\n    [authOperations.logOut.fulfilled](state, action) {\r\n      state.user = { name: null, email: null };\r\n      state.token = null;\r\n      state.isLoggedIn = false;\r\n    },\r\n    [authOperations.fetchCurrentUser.pending](state) {\r\n      state.refreshing = true;\r\n    },\r\n    [authOperations.fetchCurrentUser.fulfilled](state, action) {\r\n      state.user = action.payload;\r\n      state.refreshing = false;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [authOperations.fetchCurrentUser.rejected](state) {\r\n      state.refreshing = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport default authSlice.reducer;","import { createReducer, combineReducers } from '@reduxjs/toolkit';\r\nimport { actions } from './';\r\nimport { fetchContacts, addContact, deleteContact } from './operations';\r\n\r\nconst entities = createReducer([], {\r\n  [fetchContacts.fulfilled]: (_, action) => action.payload,\r\n  [addContact.fulfilled]: (state, { payload }) => [...state, payload],\r\n  [deleteContact.fulfilled]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst isLoading = createReducer(false, {\r\n  [fetchContacts.pending]: () => true,\r\n  [fetchContacts.fulfilled]: () => false,\r\n  [fetchContacts.rejected]: () => false,\r\n  [addContact.pending]: () => true,\r\n  [addContact.fulfilled]: () => false,\r\n  [addContact.rejected]: () => false,\r\n  [deleteContact.pending]: () => true,\r\n  [deleteContact.fulfilled]: () => false,\r\n  [deleteContact.rejected]: () => false,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [fetchContacts.rejected]: (_, action) => action.payload,\r\n  [fetchContacts.pending]: () => null,\r\n  [addContact.rejected]: (_, { payload }) => payload,\r\n  [addContact.fulfilled]: () => null,\r\n  [deleteContact.rejected]: (_, { payload }) => payload,\r\n  [deleteContact.fulfilled]: () => null,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.filterContacts]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  entities,\r\n  isLoading,\r\n  error,\r\n  filter,\r\n});","import { createAction } from '@reduxjs/toolkit';\r\nexport const filterContacts = createAction('filter');","export const getContacts = ({ contacts }) => contacts.entities;\r\nexport const getToken = ({ auth }) => auth.token;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"App_main__2fEr6\",\"title\":\"App_title__QajOg\",\"Container\":\"App_Container__b4CU4\"};","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://61efe336732d93001778e67c.mockapi.io';\r\n\r\nexport async function fetchContacts(config) {\r\n  const { data } = await axios.get('/contacts', config);\r\n  return data;\r\n}\r\n\r\nexport async function addContacts(contact) {\r\n  const { data } = await axios.post('/contacts/contacts', contact);\r\n  return data;\r\n}\r\n\r\nexport async function deleteContacts(contactId) {\r\n  const { data } = await axios.delete(`/contacts/${contactId}`);\r\n\r\n  return { ...data, contactId };\r\n}","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport * as fetchService from './services';\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n  'fetchContactsSuccess',\r\n  async (token, { rejectWithValue }) => {\r\n    try {\r\n      if (!token) return;\r\n      const config = {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      };\r\n\r\n      const response = await fetchService.fetchContacts(config);\r\n      return response;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\nexport const addContact = createAsyncThunk(\r\n  'contacts/addContact',\r\n  async ({ name, number }, { rejectWithValue }) => {\r\n    try {\r\n      const contact = { name, number };\r\n      const response = await fetchService.addContacts(contact);\r\n      return response;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\nexport const deleteContact = createAsyncThunk(\r\n  'contacts/deleteContact',\r\n  async (contactId, { rejectWithValue }) => {\r\n    try {\r\n      const response = await fetchService.deleteContacts(contactId);\r\n      return response;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  },\r\n);"],"sourceRoot":""}